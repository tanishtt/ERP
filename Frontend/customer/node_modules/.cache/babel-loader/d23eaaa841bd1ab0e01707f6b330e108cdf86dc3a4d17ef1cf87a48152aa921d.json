{"ast":null,"code":"const cart = [];\nconst handleCart = (state = cart, action) => {\n  const product = action.payload;\n  switch (action.type) {\n    case \"ADDITEM\":\n      // Check if product already in cart\n      const exist = state.find(x => x.product_id === product.product_id);\n      if (exist) {\n        // Increase the quantity\n        return state.map(x => x.product_id === product.product_id ? {\n          ...x,\n          qty: x.qty + 1\n        } : x);\n      } else {\n        return [...state, {\n          ...product,\n          qty: 1\n        }];\n      }\n      break;\n    case \"DELITEM\":\n      const exist2 = state.find(x => x.product_id === product.product_id);\n      if (exist2.qty === 1) {\n        return state.filter(x => x.product_id !== exist2.product_id);\n      } else {\n        return state.map(x => x.product_id === product.product_id ? {\n          ...x,\n          qty: x.qty - 1\n        } : x);\n      }\n      break;\n    default:\n      return state;\n      break;\n  }\n};\nexport default handleCart;","map":{"version":3,"names":["cart","handleCart","state","action","product","payload","type","exist","find","x","product_id","map","qty","exist2","filter"],"sources":["/Users/shreeyapatil/Downloads/new cc/customer/src/redux/reducer/handleCart.js"],"sourcesContent":["const cart = []\n\nconst handleCart = (state=cart, action) =>{\n    const product = action.payload\n    switch(action.type){\n        case \"ADDITEM\":\n            // Check if product already in cart\n            const exist = state.find((x) => x.product_id === product.product_id)\n            if(exist){\n                // Increase the quantity\n                return state.map((x)=>x.product_id ===product.product_id?{...x, qty: x.qty+1}:x)\n            }\n            else{\n                return [...state, {...product, qty:1}]\n            }\n            break;\n        case \"DELITEM\":\n            const exist2 = state.find((x) => x.product_id === product.product_id)\n            if(exist2.qty === 1){\n                return state.filter((x)=>x.product_id!==exist2.product_id)\n            }\n            else{\n                return state.map((x)=> x.product_id===product.product_id?{...x, qty:x.qty-1}:x)\n            }\n            break;\n\n        default:\n            return state\n            break;\n    }\n}\n\nexport default handleCart"],"mappings":"AAAA,MAAMA,IAAI,GAAG,EAAE;AAEf,MAAMC,UAAU,GAAGA,CAACC,KAAK,GAACF,IAAI,EAAEG,MAAM,KAAI;EACtC,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;EAC9B,QAAOF,MAAM,CAACG,IAAI;IACd,KAAK,SAAS;MACV;MACA,MAAMC,KAAK,GAAGL,KAAK,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,UAAU,KAAKN,OAAO,CAACM,UAAU,CAAC;MACpE,IAAGH,KAAK,EAAC;QACL;QACA,OAAOL,KAAK,CAACS,GAAG,CAAEF,CAAC,IAAGA,CAAC,CAACC,UAAU,KAAIN,OAAO,CAACM,UAAU,GAAC;UAAC,GAAGD,CAAC;UAAEG,GAAG,EAAEH,CAAC,CAACG,GAAG,GAAC;QAAC,CAAC,GAACH,CAAC,CAAC;MACpF,CAAC,MACG;QACA,OAAO,CAAC,GAAGP,KAAK,EAAE;UAAC,GAAGE,OAAO;UAAEQ,GAAG,EAAC;QAAC,CAAC,CAAC;MAC1C;MACA;IACJ,KAAK,SAAS;MACV,MAAMC,MAAM,GAAGX,KAAK,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,UAAU,KAAKN,OAAO,CAACM,UAAU,CAAC;MACrE,IAAGG,MAAM,CAACD,GAAG,KAAK,CAAC,EAAC;QAChB,OAAOV,KAAK,CAACY,MAAM,CAAEL,CAAC,IAAGA,CAAC,CAACC,UAAU,KAAGG,MAAM,CAACH,UAAU,CAAC;MAC9D,CAAC,MACG;QACA,OAAOR,KAAK,CAACS,GAAG,CAAEF,CAAC,IAAIA,CAAC,CAACC,UAAU,KAAGN,OAAO,CAACM,UAAU,GAAC;UAAC,GAAGD,CAAC;UAAEG,GAAG,EAACH,CAAC,CAACG,GAAG,GAAC;QAAC,CAAC,GAACH,CAAC,CAAC;MACnF;MACA;IAEJ;MACI,OAAOP,KAAK;MACZ;EACR;AACJ,CAAC;AAED,eAAeD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}