{"ast":null,"code":"var _jsxFileName = \"/Users/shreeyapatil/Downloads/ERP NEW/ERP/Frontend/customer/src/components/SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { FaSearch } from \"react-icons/fa\"; // Import the search icon from react-icons\nimport \"./SearchBar.css\"; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchBar = ({\n  setResults\n}) => {\n  _s();\n  // SearchBar component receives setResults function as prop\n  const [input, setInput] = useState(\"\"); // State for input value\n\n  const fetchData = value => {\n    // Function to fetch data based on search value\n    fetch(\"http://localhost:3000/customer/get-products\") // Fetch products from the server\n    .then(response => {\n      //console.log(response);\n      return response.json(); // Parse response as JSON\n    }).then(json => {\n      // Handle the JSON response\n      console.log(json, value); // Log response and search value to console\n      const results = json.filter(item => {\n        // Filter products based on search value\n        return value &&\n        // Check if value exists\n        item.product_name &&\n        // Check if product name exists\n        item.photos &&\n        // Check if photos exist\n        item.product_name.toLowerCase().includes(value.toLowerCase()) // Check if product name contains search value (case-insensitive)\n        ;\n      });\n      // Ensure setResults is a function before calling it\n      if (typeof setResults === \"function\") {\n        console.log(\"abc\", results); // Log filtered results to console\n        setResults(results); // Set filtered results using setResults function\n      } else {\n        console.log(\"xyz\"); // Log message if setResults is not a function\n      }\n    }).catch(error => {\n      // Handle errors\n      console.error(\"Error fetching data:\", error); // Log error to console\n      // Handle the error as needed in your application\n    });\n  };\n  const handleChange = value => {\n    // Function to handle input change\n    setInput(value); // Update input state with new value\n    fetchData(value); // Fetch data based on new input value\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-wrapper\",\n    style: {\n      marginLeft: \"200px\"\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(FaSearch, {\n      product_id: \"search-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Type to search...\" // Placeholder text for input\n      ,\n      value: input // Input value\n      ,\n      onChange: e => handleChange(e.target.value) // Handle input change\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","FaSearch","jsxDEV","_jsxDEV","SearchBar","setResults","_s","input","setInput","fetchData","value","fetch","then","response","json","console","log","results","filter","item","product_name","photos","toLowerCase","includes","catch","error","handleChange","className","style","marginLeft","children","product_id","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/shreeyapatil/Downloads/ERP NEW/ERP/Frontend/customer/src/components/SearchBar.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { FaSearch } from \"react-icons/fa\"; // Import the search icon from react-icons\nimport \"./SearchBar.css\"; // Import the CSS file for styling\n\nexport const SearchBar = ({ setResults }) => { // SearchBar component receives setResults function as prop\n  const [input, setInput] = useState(\"\"); // State for input value\n\n  const fetchData = (value) => { // Function to fetch data based on search value\n    fetch(\"http://localhost:3000/customer/get-products\") // Fetch products from the server\n      .then((response) => {\n        //console.log(response);\n        return response.json(); // Parse response as JSON\n      })\n      .then((json) => { // Handle the JSON response\n        console.log(json, value); // Log response and search value to console\n        const results = json.filter((item) => { // Filter products based on search value\n          return (\n            value && // Check if value exists\n            item.product_name && // Check if product name exists\n            item.photos && // Check if photos exist\n            item.product_name.toLowerCase().includes(value.toLowerCase()) // Check if product name contains search value (case-insensitive)\n          );\n        });\n        // Ensure setResults is a function before calling it\n        if (typeof setResults === \"function\") {\n          console.log(\"abc\", results); // Log filtered results to console\n          setResults(results); // Set filtered results using setResults function\n        } else {\n          console.log(\"xyz\"); // Log message if setResults is not a function\n        }\n      })\n      .catch((error) => { // Handle errors\n        console.error(\"Error fetching data:\", error); // Log error to console\n        // Handle the error as needed in your application\n      });\n  };\n\n  const handleChange = (value) => { // Function to handle input change\n    setInput(value); // Update input state with new value\n    fetchData(value); // Fetch data based on new input value\n  };\n\n  return (\n    <div className=\"input-wrapper\" style={{marginLeft:\"200px\"}}> {/* Search input wrapper */}\n      <FaSearch product_id=\"search-icon\" /> {/* Search icon */}\n      <input\n        placeholder=\"Type to search...\" // Placeholder text for input\n        value={input} // Input value\n        onChange={(e) => handleChange(e.target.value)} // Handle input change\n      />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,gBAAgB,CAAC,CAAC;AAC3C,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAAE;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC,MAAMS,SAAS,GAAIC,KAAK,IAAK;IAAE;IAC7BC,KAAK,CAAC,6CAA6C,CAAC,CAAC;IAAA,CAClDC,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACA,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDF,IAAI,CAAEE,IAAI,IAAK;MAAE;MAChBC,OAAO,CAACC,GAAG,CAACF,IAAI,EAAEJ,KAAK,CAAC,CAAC,CAAC;MAC1B,MAAMO,OAAO,GAAGH,IAAI,CAACI,MAAM,CAAEC,IAAI,IAAK;QAAE;QACtC,OACET,KAAK;QAAI;QACTS,IAAI,CAACC,YAAY;QAAI;QACrBD,IAAI,CAACE,MAAM;QAAI;QACfF,IAAI,CAACC,YAAY,CAACE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACb,KAAK,CAACY,WAAW,CAAC,CAAC,CAAC,CAAC;QAAA;MAElE,CAAC,CAAC;MACF;MACA,IAAI,OAAOjB,UAAU,KAAK,UAAU,EAAE;QACpCU,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEC,OAAO,CAAC,CAAC,CAAC;QAC7BZ,UAAU,CAACY,OAAO,CAAC,CAAC,CAAC;MACvB,CAAC,MAAM;QACLF,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;MACtB;IACF,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MAAE;MAClBV,OAAO,CAACU,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC,CAAC;MAC9C;IACF,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,YAAY,GAAIhB,KAAK,IAAK;IAAE;IAChCF,QAAQ,CAACE,KAAK,CAAC,CAAC,CAAC;IACjBD,SAAS,CAACC,KAAK,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,oBACEP,OAAA;IAAKwB,SAAS,EAAC,eAAe;IAACC,KAAK,EAAE;MAACC,UAAU,EAAC;IAAO,CAAE;IAAAC,QAAA,GAAC,GAAC,eAC3D3B,OAAA,CAACF,QAAQ;MAAC8B,UAAU,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eACtChC,OAAA;MACEiC,WAAW,EAAC,mBAAmB,CAAC;MAAA;MAChC1B,KAAK,EAAEH,KAAM,CAAC;MAAA;MACd8B,QAAQ,EAAGC,CAAC,IAAKZ,YAAY,CAACY,CAAC,CAACC,MAAM,CAAC7B,KAAK,CAAE,CAAC;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAhDWF,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}